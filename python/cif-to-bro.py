#!/usr/bin/python
#
# This takes a CIF dump and pulls out the goodies we want from it, then
# saves it in bro's Sensitive DNS format.
#
import re
import cif

OUTFILE = "/etc/bro/site/sensitive-domains.bro"


def get_cif_domains():
    rclient = cif.ClientINI(path='/usr/local/etc/cif.cfg',
                            fields=['address', 'description'],
                            no_verify_tls=True)

    # this returns a dict
    # need to translate it to an object with "plugin" type properties
    # Takes: query, severity, restriction, nolog, confidence, simple, guid)
    feed = rclient.GET('domain/botnet', 'high', None, False, '50', True, None)
    if rclient.responseCode != 200:
        print 'request failed with code: ' + str(rclient.responseCode)
        os._exit(-1)

    if feed:
        text = rclient.table(feed)
    return text


def bro_format(domain, category=None, source="CIF", description=None,
               severity=None, raw=None, confidence=None):
        fmt = "[\"%s\"] = [ " % domain
        if (category):
                fmt = fmt + "$category=\"%s\", " % category
        if (description):
                fmt = fmt + "$description=\"%s\", " % description
        if (severity):
                fmt = fmt + "$severity=\"%s\", " % severity
        if (confidence):
                fmt = fmt + "$confidence=\"%s\", " % confidence
        if (raw):
                fmt = fmt + "$raw=\"%s\", " % raw
        fmt = fmt + " $source=\"%s\"" % source
        fmt = fmt + "], \n"
        return fmt


def main():
        bro_file = open(OUTFILE, 'w')
        bro_file.write("# Autogenerated by update script\n")
        bro_file.write("redef DNS::hostile_domain_list += {\n")

        done = []

        doms = get_cif_domains()

        for dom_ent in doms.splitlines():
                # We're only interested in the data lines, which all contain
                # this:
                if dom_ent.find("|") < 0:
                        continue
                # The simple output uses the pipe to separate fields
                (address, description) = dom_ent.split('|')
                # No re-work.
                if address in done:
                        continue
                # Pull out the good stuff first
                if (description.find("tdl") >= 0 or
                    description.find("tdss") >= 0):
                        bro_file.write(bro_format(address[:-1],
                                       raw=dom_ent[:-1],
                                       category="TDSS",
                                       description=description))
                elif description.find("zeus") >= 0:
                        bro_file.write(bro_format(address[:-1],
                        raw=dom_ent[:-1],
                        category="Zeus",
                        description=description))
                elif description.find("torpig") >= 0:
                        bro_file.write(bro_format(address[:-1],
                                       raw=dom_ent[:-1],
                                       category="Torpig",
                                       description=description))
                elif description.lower().find("bredolab") >= 0:
                        bro_file.write(bro_format(address[:-1],
                                       raw=dom_ent[:-1],
                                       category="Bredolab",
                                       description=description))
                elif description.find("mebroot") >= 0:
                        bro_file.write(bro_format(address[:-1],
                                       raw=dom_ent[:-1],
                                       category="Mebroot",
                                       description=description))
                elif description.lower().find("virut") >= 0:
                        bro_file.write(bro_format(address[:-1],
                                       raw=dom_ent[:-1],
                                       category="Virut",
                                       description=description))
                elif description.lower().find("gbot") >= 0:
                        bro_file.write(bro_format(address[:-1],
                                       raw=dom_ent[:-1],
                                       category="GBot",
                                       description=description))
#                else:
#                        print "DEBUG: unknown %s" % description
                done.append(address)

        bro_file.write("};\n")
        bro_file.close()

if __name__ == "__main__":
        main()
